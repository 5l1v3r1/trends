#!/bin/sh
#
# =========================================================================== #
# File:        trends                                                         #
# Description: Get trends from eksi or google                                 #
# Author:      ihsan <ihsanl at pm dot me>                                    #
# Updated At:  1586813602                                                     #
# License:     MIT License                                                    #
# =========================================================================== #

dir_cache=$HOME/.trends;
dir_eksi=$dir_cache/eksi;
dir_google=$dir_cache/google;
goourl=https://trends.google.com/trends/trendingsearches/daily/rss?geo=`\
	echo $nation | tr [:lower:] [:upper:]`
eksurl=https://eksisozluk.com

mkdir -p $dir_cache
mkdir -p $dir_eksi
mkdir -p $dir_google
# Funcs {{{1

get_eksi_gundem() {
	curl -s $eksurl |
		pup -p '.topic-list.partial a:not(.pinned) json{}' |
		jq '[.[] |
		{
			entry_count: .children[].text | tonumber,
			text: .text,
			link: .href | split("?")[0]
		}] | sort_by(.entry_count | tonumber) | reverse'
}
get_eksi_subject_best() {
	curl -s "${eksurl}$(jq -r '.[0].link' $1)?a=nice" |
		pup -p '#entry-item-list > li json{}' |
		jq '[.[] |
		{
			entry_id: ."data-id",
			entry: .children[0].text,
			author: ."data-author",
			favourite: ."data-favorite-count" | tonumber
		}] | sort_by(.favourite | tonumber) | reverse' |
		# TODO 1586824856: Make this below optionally colorful.
		jq -jr '.[0] |
			"fav: ", .favourite, "\n",
			"author: ", .author, "\n\n",
			.entry' | fold -sw 80
}
usagemessage='[ -ebguRrCc ] [ -l limit ] [ -n countrycode ]'
usage() {
	>&2 echo "usage: `basename $0` $usagemessage";
}
colored() {
	colorcode=1;
	while IFS= read -r line; do
		[ $colorcode -lt 3 ] && tput bold;
		tput setaf $colorcode; printf " â€¢ $line\n"; tput sgr0;
		[ $colorcode -ge 3 ] && colorcode=15 || let colorcode++
	done
}

# }}}
# Args {{{1

limit=10
nation=gb
best=false
use_rate=true
use_eksi=false
use_urls=false
use_color=false
use_google=false

while getopts :egbuRrCcl:n: args; do
	case $args in
		(b) best=true;;
		(e) use_eksi=true;;
		(r) use_rate=true;;
		(u) use_urls=true;;
		(R) use_rate=false;;
		(c) use_color=true;;
		(C) use_color=false;;
		(g) use_google=true;;
		(l) limit="$OPTARG";;
		(n) use_google=true; nation=`echo $OPTARG | tr [:upper:] [:lower:]`;;
		(h) usage; exit 0;;
		([?]) usage; exit 2;;
	esac
done

# }}}
# Request & Results {{{1

if $best; then
	file="${dir_eksi}/$(date +%s).json"
	get_eksi_gundem > $file
	echo "title: $(jq -r '.[0].text' $file)"
	echo
	get_eksi_subject_best $file
elif $use_eksi || ! $use_google; then
	file="${dir_eksi}/$(date +%s).json"
	get_eksi_gundem > $file
	if $use_urls; then
		jq -jr '.[] | .entry_count, " ", .text, " | href=https://eksisozluk.com",
		.link, "\n"' $file
	else
		jq -jr '.[] | .entry_count, " ", .text, "\n"' $file
	fi |
	head -n $limit |
	if $use_rate; then cat /dev/stdin; else cut -d' ' -f2-; fi |
	if $use_color; then colored; else cat /dev/stdin; fi
fi

if $use_google; then
	file="${dir_google}/$(date +%s).txt"
	curl -s $goourl | grep -o '<title>.*<\/title>' |
		sed 's/^\s*<title>\(.*\)<\/title>/\1/;1d' > $file
	cat $file | head -n $limit |
		if $use_rate; then awk '{print NR, $0}'; else cat /dev/stdin; fi |
		if $use_color; then colored; else cat /dev/stdin; fi 
fi

# }}}
